/*
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * The version of the OpenAPI document: 1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PartyComplexName : Data model for the complex type PartyComplexName.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PartyComplexName {
    /// First name of the Party (Name Type).
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    /// Middle name of the Party (Name Type).
    #[serde(rename = "middleName", skip_serializing_if = "Option::is_none")]
    pub middle_name: Option<String>,
    /// Last name of the Party (Name Type).
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
}

impl PartyComplexName {
    /// Data model for the complex type PartyComplexName.
    pub fn new() -> PartyComplexName {
        PartyComplexName {
            first_name: None,
            middle_name: None,
            last_name: None,
        }
    }
}


