/*
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * The version of the OpenAPI document: 1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// QuotesIdPutResponse : PUT /quotes/{ID} object



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct QuotesIdPutResponse {
    #[serde(rename = "transferAmount")]
    pub transfer_amount: crate::models::Money,
    #[serde(rename = "payeeReceiveAmount", skip_serializing_if = "Option::is_none")]
    pub payee_receive_amount: Option<crate::models::Money>,
    #[serde(rename = "payeeFspFee", skip_serializing_if = "Option::is_none")]
    pub payee_fsp_fee: Option<crate::models::Money>,
    #[serde(rename = "payeeFspCommission", skip_serializing_if = "Option::is_none")]
    pub payee_fsp_commission: Option<crate::models::Money>,
    /// The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to ISO 8601, expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -  \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).
    #[serde(rename = "expiration")]
    pub expiration: String,
    #[serde(rename = "geoCode", skip_serializing_if = "Option::is_none")]
    pub geo_code: Option<crate::models::GeoCode>,
    /// Information for recipient (transport layer information).
    #[serde(rename = "ilpPacket")]
    pub ilp_packet: String,
    /// Condition that must be attached to the transfer by the Payer.
    #[serde(rename = "condition")]
    pub condition: String,
    #[serde(rename = "extensionList", skip_serializing_if = "Option::is_none")]
    pub extension_list: Option<crate::models::ExtensionList>,
}

impl QuotesIdPutResponse {
    /// PUT /quotes/{ID} object
    pub fn new(transfer_amount: crate::models::Money, expiration: String, ilp_packet: String, condition: String) -> QuotesIdPutResponse {
        QuotesIdPutResponse {
            transfer_amount,
            payee_receive_amount: None,
            payee_fsp_fee: None,
            payee_fsp_commission: None,
            expiration,
            geo_code: None,
            ilp_packet,
            condition,
            extension_list: None,
        }
    }
}


