/*
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * The version of the OpenAPI document: 1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TransactionType : Data model for the complex type TransactionType.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionType {
    #[serde(rename = "scenario")]
    pub scenario: crate::models::TransactionScenario,
    /// Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).
    #[serde(rename = "subScenario", skip_serializing_if = "Option::is_none")]
    pub sub_scenario: Option<String>,
    #[serde(rename = "initiator")]
    pub initiator: crate::models::TransactionInitiator,
    #[serde(rename = "initiatorType")]
    pub initiator_type: crate::models::TransactionInitiatorType,
    #[serde(rename = "refundInfo", skip_serializing_if = "Option::is_none")]
    pub refund_info: Option<crate::models::Refund>,
    /// (BopCode) The API data type BopCode is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. https://www.imf.org/external/np/sta/bopcode/
    #[serde(rename = "balanceOfPayments", skip_serializing_if = "Option::is_none")]
    pub balance_of_payments: Option<String>,
}

impl TransactionType {
    /// Data model for the complex type TransactionType.
    pub fn new(scenario: crate::models::TransactionScenario, initiator: crate::models::TransactionInitiator, initiator_type: crate::models::TransactionInitiatorType) -> TransactionType {
        TransactionType {
            scenario,
            sub_scenario: None,
            initiator,
            initiator_type,
            refund_info: None,
            balance_of_payments: None,
        }
    }
}


