/* 
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * OpenAPI spec version: 1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// AuthenticationInfo : Data model for the complex type AuthenticationInfo

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AuthenticationInfo {
  /// Type of authentication.
  #[serde(rename = "authentication")]
  authentication: ::models::AuthenticationType,
  /// Authentication value.
  #[serde(rename = "authenticationValue")]
  authentication_value: ::models::AuthenticationValue
}

impl AuthenticationInfo {
  /// Data model for the complex type AuthenticationInfo
  pub fn new(authentication: ::models::AuthenticationType, authentication_value: ::models::AuthenticationValue) -> AuthenticationInfo {
    AuthenticationInfo {
      authentication: authentication,
      authentication_value: authentication_value
    }
  }

  pub fn set_authentication(&mut self, authentication: ::models::AuthenticationType) {
    self.authentication = authentication;
  }

  pub fn with_authentication(mut self, authentication: ::models::AuthenticationType) -> AuthenticationInfo {
    self.authentication = authentication;
    self
  }

  pub fn authentication(&self) -> &::models::AuthenticationType {
    &self.authentication
  }


  pub fn set_authentication_value(&mut self, authentication_value: ::models::AuthenticationValue) {
    self.authentication_value = authentication_value;
  }

  pub fn with_authentication_value(mut self, authentication_value: ::models::AuthenticationValue) -> AuthenticationInfo {
    self.authentication_value = authentication_value;
    self
  }

  pub fn authentication_value(&self) -> &::models::AuthenticationValue {
    &self.authentication_value
  }


}



