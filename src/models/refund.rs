/* 
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * OpenAPI spec version: 1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// Refund : Data model for the complex type Refund.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Refund {
  /// Reference to the original transaction ID that is requested to be refunded.
  #[serde(rename = "originalTransactionId")]
  original_transaction_id: ::models::CorrelationId,
  /// Free text indicating the reason for the refund.
  #[serde(rename = "refundReason")]
  refund_reason: Option<::models::RefundReason>
}

impl Refund {
  /// Data model for the complex type Refund.
  pub fn new(original_transaction_id: ::models::CorrelationId) -> Refund {
    Refund {
      original_transaction_id: original_transaction_id,
      refund_reason: None
    }
  }

  pub fn set_original_transaction_id(&mut self, original_transaction_id: ::models::CorrelationId) {
    self.original_transaction_id = original_transaction_id;
  }

  pub fn with_original_transaction_id(mut self, original_transaction_id: ::models::CorrelationId) -> Refund {
    self.original_transaction_id = original_transaction_id;
    self
  }

  pub fn original_transaction_id(&self) -> &::models::CorrelationId {
    &self.original_transaction_id
  }


  pub fn set_refund_reason(&mut self, refund_reason: ::models::RefundReason) {
    self.refund_reason = Some(refund_reason);
  }

  pub fn with_refund_reason(mut self, refund_reason: ::models::RefundReason) -> Refund {
    self.refund_reason = Some(refund_reason);
    self
  }

  pub fn refund_reason(&self) -> Option<&::models::RefundReason> {
    self.refund_reason.as_ref()
  }

  pub fn reset_refund_reason(&mut self) {
    self.refund_reason = None;
  }

}



