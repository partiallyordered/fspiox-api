/*
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * The version of the OpenAPI document: 1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TransfersIdPatchResponse : PATCH /transfers/{ID} object



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransfersIdPatchResponse {
    /// The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to ISO 8601, expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -  \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).
    #[serde(rename = "completedTimestamp")]
    pub completed_timestamp: String,
    #[serde(rename = "transferState")]
    pub transfer_state: crate::models::TransferState,
    #[serde(rename = "extensionList", skip_serializing_if = "Option::is_none")]
    pub extension_list: Option<crate::models::ExtensionList>,
}

impl TransfersIdPatchResponse {
    /// PATCH /transfers/{ID} object
    pub fn new(completed_timestamp: String, transfer_state: crate::models::TransferState) -> TransfersIdPatchResponse {
        TransfersIdPatchResponse {
            completed_timestamp,
            transfer_state,
            extension_list: None,
        }
    }
}


