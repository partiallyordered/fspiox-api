/*
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * The version of the OpenAPI document: 1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// TransactionRequestsPostRequest : POST /transactionRequests object



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionRequestsPostRequest {
    /// Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).
    #[serde(rename = "transactionRequestId")]
    pub transaction_request_id: String,
    #[serde(rename = "payee")]
    pub payee: crate::models::Party,
    #[serde(rename = "payer")]
    pub payer: crate::models::PartyIdInfo,
    #[serde(rename = "amount")]
    pub amount: crate::models::Money,
    #[serde(rename = "transactionType")]
    pub transaction_type: crate::models::TransactionType,
    /// Memo assigned to transaction
    #[serde(rename = "note", skip_serializing_if = "Option::is_none")]
    pub note: Option<String>,
    #[serde(rename = "geoCode", skip_serializing_if = "Option::is_none")]
    pub geo_code: Option<crate::models::GeoCode>,
    #[serde(rename = "authenticationType", skip_serializing_if = "Option::is_none")]
    pub authentication_type: Option<crate::models::AuthenticationType>,
    /// The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to ISO 8601, expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -  \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\" (where Z indicates Zulu time zone, same as UTC).
    #[serde(rename = "expiration", skip_serializing_if = "Option::is_none")]
    pub expiration: Option<String>,
    #[serde(rename = "extensionList", skip_serializing_if = "Option::is_none")]
    pub extension_list: Option<crate::models::ExtensionList>,
}

impl TransactionRequestsPostRequest {
    /// POST /transactionRequests object
    pub fn new(transaction_request_id: String, payee: crate::models::Party, payer: crate::models::PartyIdInfo, amount: crate::models::Money, transaction_type: crate::models::TransactionType) -> TransactionRequestsPostRequest {
        TransactionRequestsPostRequest {
            transaction_request_id,
            payee,
            payer,
            amount,
            transaction_type,
            note: None,
            geo_code: None,
            authentication_type: None,
            expiration: None,
            extension_list: None,
        }
    }
}


