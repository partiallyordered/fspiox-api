/*
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * The version of the OpenAPI document: 1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PartyIdInfo : Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PartyIdInfo {
    #[serde(rename = "partyIdType")]
    pub party_id_type: crate::models::PartyIdType,
    /// Identifier of the Party.
    #[serde(rename = "partyIdentifier")]
    pub party_identifier: String,
    /// Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType.
    #[serde(rename = "partySubIdOrType", skip_serializing_if = "Option::is_none")]
    pub party_sub_id_or_type: Option<String>,
    /// FSP identifier.
    #[serde(rename = "fspId", skip_serializing_if = "Option::is_none")]
    pub fsp_id: Option<String>,
    #[serde(rename = "extensionList", skip_serializing_if = "Option::is_none")]
    pub extension_list: Option<crate::models::ExtensionList>,
}

impl PartyIdInfo {
    /// Data model for the complex type PartyIdInfo. An ExtensionList element has been added to this reqeust in version v1.1
    pub fn new(party_id_type: crate::models::PartyIdType, party_identifier: String) -> PartyIdInfo {
        PartyIdInfo {
            party_id_type,
            party_identifier,
            party_sub_id_or_type: None,
            fsp_id: None,
            extension_list: None,
        }
    }
}


