/*
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * The version of the OpenAPI document: 1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Money : Data model for the complex type Money.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Money {
    #[serde(rename = "currency")]
    pub currency: crate::models::Currency,
    /// The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.
    #[serde(rename = "amount")]
    pub amount: String,
}

impl Money {
    /// Data model for the complex type Money.
    pub fn new(currency: crate::models::Currency, amount: String) -> Money {
        Money {
            currency,
            amount,
        }
    }
}


