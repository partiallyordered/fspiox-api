/*
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * The version of the OpenAPI document: 1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ErrorInformation : Data model for the complex type ErrorInformation.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ErrorInformation {
    /// The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error.
    #[serde(rename = "errorCode")]
    pub error_code: String,
    /// Error description string.
    #[serde(rename = "errorDescription")]
    pub error_description: String,
    #[serde(rename = "extensionList", skip_serializing_if = "Option::is_none")]
    pub extension_list: Option<crate::models::ExtensionList>,
}

impl ErrorInformation {
    /// Data model for the complex type ErrorInformation.
    pub fn new(error_code: String, error_description: String) -> ErrorInformation {
        ErrorInformation {
            error_code,
            error_description,
            extension_list: None,
        }
    }
}


