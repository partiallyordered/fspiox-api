/* 
 * Open API for FSP Interoperability (FSPIOP)
 *
 * Based on API Definition.docx updated on 2020-05-19 Version 1.1. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
 *
 * OpenAPI spec version: 1.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// ParticipantsIdPutResponse : PUT /participants/{ID} object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ParticipantsIdPutResponse {
  /// List of PartyResult elements that were either created or failed to be created.
  #[serde(rename = "partyList")]
  party_list: Vec<::models::PartyResult>,
  /// Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.
  #[serde(rename = "currency")]
  currency: Option<::models::Currency>
}

impl ParticipantsIdPutResponse {
  /// PUT /participants/{ID} object
  pub fn new(party_list: Vec<::models::PartyResult>) -> ParticipantsIdPutResponse {
    ParticipantsIdPutResponse {
      party_list: party_list,
      currency: None
    }
  }

  pub fn set_party_list(&mut self, party_list: Vec<::models::PartyResult>) {
    self.party_list = party_list;
  }

  pub fn with_party_list(mut self, party_list: Vec<::models::PartyResult>) -> ParticipantsIdPutResponse {
    self.party_list = party_list;
    self
  }

  pub fn party_list(&self) -> &Vec<::models::PartyResult> {
    &self.party_list
  }


  pub fn set_currency(&mut self, currency: ::models::Currency) {
    self.currency = Some(currency);
  }

  pub fn with_currency(mut self, currency: ::models::Currency) -> ParticipantsIdPutResponse {
    self.currency = Some(currency);
    self
  }

  pub fn currency(&self) -> Option<&::models::Currency> {
    self.currency.as_ref()
  }

  pub fn reset_currency(&mut self) {
    self.currency = None;
  }

}



